name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.PSQL_DB }}
          POSTGRES_USER: ${{ secrets.PSQL_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PSQL_PWD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r code/requirements.txt

      # - name: Run tests
      #   run: |
      #     source venv/bin/activate
      #     pytest
 
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Verify Docker username
        run: echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/plan-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/plan-backend:latest

      - name: Deploy with Docker Compose
        run: |
          echo "POSTGRES_DB=${{ secrets.PSQL_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.PSQL_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.PSQL_PWD }}" >> .env
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml up -d
